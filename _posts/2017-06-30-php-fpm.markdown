---
layout:     post
title:      "PHP-FPM的正确打开方式"
keywords:   "php-fpm,fpm,如何使用php-fpm" 
description: "讲述什么是PHP-FPM，如何正确使用PHP-FPM"
date:       2017-06-30
published:  false 
catalog: true
tags:
    - php 
---

## 前言
## 什么是FastCGI
## 什么是PHP-FPM
## Unix socket与Tcp/Ip socket
Unix socket和Tcp/Ip socket都是进程间的通信机制，Unix socket允许运行在同一台计算机上的的进程之间进行双向数据交换。而Tcp/Ip socket是允许进程间通过网络通信，在某些情况下，也可以使用Tcp/Ip socket与运行在同一台计算机上的进程通信（通过使用回环接口）。

UNIX socket知道进程在同一个系统上执行，所以它们可以避免一些检查和操作（如路由），这使得Unix socket进程间的通信比Tcp/Ip socket更快更轻。因此，如果你让进程在同一个主机上通信，使用Unix socket更好。

## 使PHP-FPM监听Unix socket
php-fpm的监听方式默认采用TCP/Ip socket机制，默认的php文件解析配置如下：
```nginx
location ~ \.php$ {
    root           html;
    fastcgi_pass   127.0.0.1:9000;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    include        fastcgi_params;
}
```
查看fpm配置文件，默认监听在9000端口，修改该配置，使其监听Unix socket：
```ini
;listen = 9000
listen = /var/run/php-fpm.socket
```

然后修改Nginx配置文件：
```nginx
#fastcgi_pass   127.0.0.1:9000;
fastcgi_pass   unix:/var/run/php-fpm.socket;
```

重启Nginx，以后PHP的请求会被Nginx传递到Unix socket去处理。

## PHP-FPM的平滑操作
启动php-fpm：`/usr/local/php/sbin/php-fpm`

php 5.3.3 以后不再支持php-fpm的start、reload、stop等操作，请使用信号控制fpm的master进程：
* INT,TERM 立刻终止
* QUIT 平滑终止
* USR1 重新打开日志文件
* USR2 平滑重载所有worker进程并重新载入配置和二进制模块

重启php-fpm要先找到php-fpm的master进程pid，然后使用USR2信号kill掉：
```
[root@8504d5fef581 /]# ps -ef|grep php-fpm
root         1024     0  0 Jul04 ?        00:00:19 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)
nobody       1025     1  0 Jul04 ?        00:00:00 php-fpm: pool www
nobody       1026     1  0 Jul04 ?        00:00:00 php-fpm: pool www
```
`kill -USR2 1024`，kill掉后，fpm进程会自动重启。

以上方案一般用于没有生成php-fpm.pid文件时使用，我们可以在php-fpm.conf配置文件中指定pid文件的存放位置：
```
pid = /var/run/php-fpm.pid
```
重启php-fpm，/var/run目录下便会生成php-fpm.pid文件了，以后就可以使用以下命令重启php-fpm：
```
cat /var/run/php-fpm.pid|xargs kill -USR2
```
